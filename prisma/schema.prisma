// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  login     String   @unique
  password  String
  version   Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Artist {
  id        String      @id @default(uuid())
  name      String
  grammy    Boolean
  tracks    Track[]
  albums    Album[]
  favorites Favorites[] @relation("FavoriteArtists")
}

model Track {
  id       String @id @default(uuid())
  name     String
  duration Int

  artist   Artist? @relation(fields: [artistId], references: [id])
  artistId String?

  album     Album?      @relation(fields: [albumId], references: [id])
  albumId   String?
  favorites Favorites[] @relation("FavoriteTracks")
}

model Album {
  id   String @id @default(uuid())
  name String
  year Int

  artist   Artist? @relation(fields: [artistId], references: [id])
  artistId String?

  track     Track[]
  favorites Favorites[] @relation("FavoriteAlbums")
}

model Favorites {
  id      String   @id @default(uuid())
  artists Artist[] @relation("FavoriteArtists")
  albums  Album[]  @relation("FavoriteAlbums")
  tracks  Track[]  @relation("FavoriteTracks")
}
